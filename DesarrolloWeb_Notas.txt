////////////////////////////////////////////////// HTML ////////////////////////////////////////
DOM es el acrónimo de Document Object Model

[alt=""] en la etiqueta <img> sirve para mostrar un texto alternativo en caso de que la imagen no cargue.
<link rel="icon" type="image/png" href="img/favicon.png"> Logo en Pestaña

Input type="submit" -> es un boton tambien
[for=""] en la etiqueta label hace un enlace al elemento con el id que le asigne, así cuando se le de click al label el focus se pondrá en el atributo especificado.


Links
[href="#id del elemento al que me quiero dirigir"] ->  dentro de la misma pagina
[href="/rutadelapg"] -> navegar a otras paginas de mi web.
[href="link directo del contenido"] -> navegar a paginas o contenidos externos a mi web.

<a target="_blank"> -> sirve para abrir el contenido del linkl en una pg nueva y no reemplazar en la que estamos

Style -> tiene mas prioridad un style inline que uno externo. la prioridad se dá por el stylo que está mas cerca del elemento.
atributo !important rompe el squema de cascada y le da prioridad a la clase css. -> no recomendable.

/*comentarios css*/

------------------------------------------Reglas  Declaraciones Propiedades Y Valores CSS.-------------------------------
Ejemplo :

Todo esto es una regla.

            header{
                background: palevioletred;
            }

header          -> Selector.
{}              -> Declaración.
background      -> Propiedad.
palevioletred   -> Valor.

---------------------------------------------------------------Selectores----------------------------------------------

Selectores son la manera de identificar a uno o mas elementos en el html.
Selector de etiqueta: Referencia al nombre del tag html -> header - section - article - nav.
Selector descendiente es un elemento hijo de otro elemento -> body -> header -> div -> nav -> ol -> li -> a.
Selector clase -> .nombreClase -> se puede usar para varios elementos.
Selector id -> #nombreClase -> se usa para darle un estilo propio a cada elemento unico.


Estilos del navegador
User agent stylesheet son los estilos que maneja el navegador, cada navegador puede variar así que hay que tener esto en cuenta.

////////////////////////////////////////////////////////////// CSS /////////////////////////////////////////////////
//Colores
Sé puede representar colores de 3 maneras.

1) Palabra  clave [blue]
2) Hexadecimales cada dos 'F' dan el valor al patro RGB [#FF(R)FF(G)FF(B)], tambien están las opciones de rgb() o rgba()
3) hls() y hlsa()

Unidades de medida
Pixel: Es la menor unidad homogenea de color que forma parte de una imagen digital.
em: Con respecto al interlineado 1.5em -> El uno representa un 100% de la fuente por lo que respeta su espaci,
la hace legible pero los renglones quedan a ras, el .5 quiere decir que tome el 50% del tamaño de la fuente y 
lo agregue al espacio restante

// Imagenes
para las rutas de las imagenes en css hay:
relativas ('../[ruta del archivo]') con el ../ me salgo de la carpeta para buscar en otro lugar.
absolutas ('ruta del archivo desde la raiz') esta ruta indica el path entero del archivo.

--------------------------------------------------- Alineaciones --------------------------------------------
//Margin
Es el margen externo del elemento, se puede expresar de dos maneras:
margin: top right bottom left [100px 50px 60px 30px] 
margin : top y bottom en uno solo y right y left en otro[100px 20px]

//Padding
Es el margen del elemento padre con respecto al hijo.
padding: top right bottom left [100px 50px 60px 30px]
padding: top y bottom en uno solo y right y left en otro[100px 20px]

//Display 
esta propiedad me permite mostrar o no un elemento y tambie me permite decidir de que manera mostrarlo.
display: flex;

/*flex en elemento Padre: pondra todos los elementos en linea pero no respeta el tamaño,
acopla los elementos al tamaño del conatainer para que todos entren*/

/*flex en elemento Hijo: Con esta propiedad defino que tanto se puede modificar el el tamaño del elemento,
en caso de ser 0, se activará el scroll horizontal para que todos los elementos entren pero no se les modifique el tamaño*/

En caso de usar un Flex se determina como se vana trabajar los elementos:
Horizzontal
flex-direction: row;
justify-content: [initial o left, center, end oright ] -> actua como ajustes horizontales (Contenido contra la Izquiera, Contenido centrado, contenido contra la derecha).
align-items : [initial o left, center, end oright] -> actua como ajuste vertical (Contenido contra el techo, contenido centrado, contenido contra el suelo)
align-selfe: [initial o left, center, end oright] -> se usa para alinear un elemento especifico, (alinearse el mismo)


